<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.sinchon.mapper.reservation">
	<!-- 수정 완료 : 예약정보 테이블에 사용자가 입력한 예약정보 저장 -->	
	<insert id="insertReservationInfo" parameterType="com.project.sinchon.entity.ReservationInfoEntity">
	<!-- res_ID로 PK값 생성후 해당값을 INSERT구문에 넣어줌. -->
		<selectKey resultType="int" keyProperty="resId" order="BEFORE">
        	SELECT IFNULL(max(res_ID),0)+1 as resId
			FROM reservation_info
    	</selectKey>
		INSERT INTO reservation_info (
				res_ID
			  , check_in 
			  , check_out
			  , stay_purpose 
			  , num_of_guests 
			  , payment
			  , message
			  , user_ID 
			  , room_ID
			  , room_name
			  )
		VALUES (
				#{resId}
			  ,	#{checkIn}
			  ,	#{checkOut}
			  ,	#{stayPurpose}
			  ,	#{numOfGuests}
			  ,	#{payment}
			  ,	#{message}
			  ,	#{userId}
			  ,	#{roomId}
			  , #{roomName}
			  )
	</insert>
	
	
	<!-- insertInfo를 통해 생성된 res_ID로 Procedure 호출 : 예약된 방 테이블, 예약상태 테이블 레코드 생성 -->
	<insert id="insertRoomAndState" parameterType="Map">
		{ CALL insert_room_and_state (
			#{resId},
			#{userId})
		}
	</insert>
	
	
	<!-- 게스트의 예약 현황 및 상태 정보 가져오기 -->
	<select id="getMyReservationList" resultType="com.project.sinchon.dto.MyReservationDTO">
		SELECT	  Info.res_ID AS resId
				, Info.res_date AS resDate
				, Info.check_in AS checkIn
				, Info.check_out AS checkOut
				, Info.stay_purpose  AS stayPurpose
				, Info.num_of_guests AS numOfGuests
				, Info.message
				, Info.payment
				, Info.room_ID AS roomId
				, Info.room_name AS roomName
				, State.state 
		FROM reservation_info Info INNER JOIN reservation_state State 
			ON Info.res_ID = State.res_ID
		WHERE Info.user_ID = #{userId}; 
	</select>
	
	
	<!-- 수정할 예약 정보 가져오기 -->
	<select id="getReservationInfoForUpdate" parameterType="Map" resultType="com.project.sinchon.entity.ReservationInfoEntity">
		SELECT 	res_ID AS resId
			  , room_ID AS roomId
			  ,	stay_purpose AS stayPurpose
			  , num_of_guests AS numOfGuests
			  , message
		FROM reservation_info
		WHERE res_ID = #{resId}
		  AND user_ID = #{userId} 
	</select>
	
	
	<!-- 입력받은 데이터로 예약정보 수정하기 -->
	<update id="updateReservationInfo" parameterType="com.project.sinchon.entity.ReservationInfoEntity">
		UPDATE reservation_info
		SET 
			stay_purpose = #{stayPurpose}, 
			num_of_guests = #{numOfGuests},
			message = #{message}
		WHERE res_ID = #{resId}
		  AND user_ID = #{userId}
	</update>
	
	
	<!-- 취소된 예약 예약취소 테이블에 입력하기 -->
	<insert id="insertReasonForCancelReservation" parameterType="com.project.sinchon.dto.ReservationCancelDTO">
		INSERT INTO reservation_cancel
			(
			   res_ID
			 , content
			 )
		VALUES 
			(
			   #{resId}
			 , #{content}
			 )
	</insert>
	
	
	<!-- 취소된 예약의 예약상태 변경 -->
	<update id="updateReservationStateToCancel" parameterType="com.project.sinchon.dto.ReservationCancelDTO">
		UPDATE 	reservation_state
		SET		state = 3
		WHERE 	res_ID = #{resId}
		  AND 	user_ID = #{userId}
	</update>
	
	
	<!-- 취소된 res_ID로 예약된 방 테이블에서 예약일정 삭제 -->
	<delete id="deleteReservationRoom" parameterType="com.project.sinchon.dto.ReservationCancelDTO">
		DELETE FROM reservation_room
		WHERE res_ID = #{resId}
	</delete>
</mapper>